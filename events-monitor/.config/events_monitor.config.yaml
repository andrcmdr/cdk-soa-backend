name: "testnet-events-monitor"

chain:
  http_rpc_url: "https://rpc.polygon-cdk-chain.example"
  ws_rpc_url:   "wss://rpc.polygon-cdk-chain.example/ws"
  chain_id:  1101

indexing:
  from_block: 0
  to_block:
  all_logs_processing: 1
  filter_senders: []
#  filter_senders:
#    - "0x742d35Cc6634C0532925a3b8BC342A5b6437AFCD"
#    - "0x742d35Cc6634C0532925a3b8BC342A5b6437AFCE"
  filter_receivers: []
#  filter_receivers:
#    - "0x1234567890123456789012345678901234567890"

postgres:
  # Local PostgreSQL connection (primary)
  # libpq connection string format
  dsn: "host=localhost user=events_monitor password=passwd dbname=events_monitor_db port=5432"
  schema: "./init_table.sql"

# AWS RDS configuration (optional additional data layer)
aws_rds:
  enabled: 1  # Set to 0 to disable AWS RDS support
  endpoint: "your-rds-instance.abcd1234.us-west-2.rds.amazonaws.com"
  port: 5432
  database_name: "events_monitor_rds"
  username: "events_monitor_user"
  password: "your-secure-password"
  region: "us-west-2"  # AWS region (optional)
  ssl_mode: "require"  # SSL configuration (disable, prefer, require, verify-ca, verify-full)
  connection_timeout: 30  # Connection timeout in seconds (optional)
  max_connections: 10  # Maximum connections (optional)
  schema: "./init_aws_rds_schema.sql"  # Schema file for AWS RDS (optional)

nats:
  nats_enabled: 1
  url: "nats://localhost:4222"
  # existing JetStream object store bucket for persisted event payloads
  object_store_bucket: "events_bucket"

# contracts configuration

# max_implementations_per_contract: 1
# max_implementation_nesting_depth: 0

# contracts to monitor; ABI path is relative to the binary CWD
contracts:
  - name: "Bridge"
    address: "0x1111111111111111111111111111111111111111"
    abi_path: "./abi/Bridge.json"
    implementations: null
  - name: "ERC20USDC"
    address: "0x2222222222222222222222222222222222222222"
    abi_path: "./abi/ERC20.json"
    implementations: null
  # ... other contracts
