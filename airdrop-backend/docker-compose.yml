version: '3.9'

services:
  # Airdrop Backend Service
  airdrop-backend:
    build:
      context: .
      dockerfile: cdk-soa-backend.dockerfile
      target: apps_runtime
    container_name: airdrop_backend
    command: ["./airdrop-backend", "./.config/airdrop_backend.config.yaml"]
    environment:
      - CONFIG_PATH=/apps/.config/airdrop_backend.config.yaml
      - RUST_LOG=debug
      - RUST_BACKTRACE=full
    volumes:
      - ./.config/airdrop_backend.config.yaml:/apps/.config/airdrop_backend.config.yaml:ro
      - ./abi/:/apps/abi/:ro
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - airdrop-network

  # PostgreSQL Database
  postgres:
    image: postgres:17
    container_name: airdrop_postgres
    environment:
      POSTGRES_DB: airdrop_db
      POSTGRES_USER: airdrop_user
      POSTGRES_PASSWORD_FILE: /run/secrets/pg-passwd
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./.secret/pg-passwd:/run/secrets/pg-passwd:ro
      - ./.pgdata/:/var/lib/postgresql/data/pgdata/
      - ./initial_schema.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airdrop_user -d airdrop_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - airdrop-network

  # NATS with JetStream
  nats:
    build:
      context: .
      dockerfile: cdk-soa-backend.dockerfile
      target: apps_runtime
    container_name: airdrop_nats
    command: ["CMD", "./nats-server --name 'events_monitor_bus_nats_server' --addr 127.0.0.1 --port 4222 --http_port 4242 --config ./.config/nats.config --log_size_limit 1073741824 --jetstream"]
    volumes:
      - ./.natsdata/:/apps/nats.db/
      - ./.logs/:/apps/.logs/
      - ./.config/nats.config:/apps/.config/nats.config:ro
    ports:
      - "4222:4222" # NATS client connections
      - "4242:4242" # HTTP monitoring port
      - "8222:8222" # HTTP monitoring port
      - "6222:6222" # Cluster connections
    healthcheck:
      test: ["CMD", "nats", "server", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    networks:
      - airdrop-network

volumes:
  .pgdata:
    driver: local
  .natsdata:
    driver: local

networks:
  airdrop-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
